<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1340,972</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID8}" sap2010:Annotation.AnnotationText="-- ReFrameWork - Robotic Enterprise Framework --&#xA;-- Edit MvR &amp; Partners v3 - Johans Brink, 2020&#xA;-- TEMPLATE--" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="806.285714285714,806.857142857143" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">60,12.5</av:Point>
        <x:Double x:Key="StateContainerWidth">772</x:Double>
        <x:Double x:Key="StateContainerHeight">708</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">120,53.6714285714286 150,53.6714285714286 150,55.7142857142857 274.5,55.7142857142857</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID5" sap2010:Annotation.AnnotationText="Get next transaction input data" DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="251.428571428571,100.571428571429" sap2010:WorkflowViewState.IdRef="State_4">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="898.857142857143,1204" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="856.571428571429,21.7142857142857" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="856.571428571429,987.428571428571" sap2010:WorkflowViewState.IdRef="If_8">
            <If.Then>
              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="376.571428571429,288" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                <Assign DisplayName="End Process" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[TransactionItem]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <TryCatch DisplayName="Try GetTransactionData" sap:VirtualizedContainerService.HintSize="434.285714285714,833.714285714286" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="Check for MaxTransactions and GetTransactionData" sap:VirtualizedContainerService.HintSize="718.857142857143,838.285714285714" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Check for MaxTransactions" sap:VirtualizedContainerService.HintSize="676.571428571429,746.857142857143" sap2010:WorkflowViewState.IdRef="Sequence_34">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Flowchart sap:VirtualizedContainerService.HintSize="634.285714285714,655.428571428571" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                            <av:Size x:Key="ShapeSize">60,74.8571428571429</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 244.641666666667,107.5 244.641666666667,127.5</av:PointCollection>
                            <x:Double x:Key="Height">620.07999999999993</x:Double>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Flowchart.StartNode>
                          <x:Reference>__ReferenceID4</x:Reference>
                        </Flowchart.StartNode>
                        <FlowDecision x:Name="__ReferenceID4" Condition="[Config(&quot;MaxTransactions&quot;).ToString.Equals(&quot;ALL&quot;)]" DisplayName="MaxTransactions = ALL" sap:VirtualizedContainerService.HintSize="128.571428571429,86.8571428571429" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">180.641666666667,127.5</av:Point>
                              <av:Size x:Key="ShapeSize">128.571428571429,86.8571428571429</av:Size>
                              <av:PointCollection x:Key="TrueConnector">180.641666666667,171 120,171 120,404.5</av:PointCollection>
                              <av:PointCollection x:Key="FalseConnector">308.641666666667,171 420,171 420,226.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID0">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">20,404.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,52.5714285714286</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap:VirtualizedContainerService.HintSize="200,52.5714285714286" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_TransactionDetails">[TransactionDetails]</OutArgument>
                                  <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionQueueItem">[TransactionQueueItem]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID1" Condition="[TransactionNumber &lt;= Int32.Parse(Config(&quot;MaxTransactions&quot;).ToString)]" DisplayName="TransactionNumber &lt;= MaxTransactions" sap:VirtualizedContainerService.HintSize="160,86.8571428571429" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID0}">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">340,226.5</av:Point>
                                  <av:Size x:Key="ShapeSize">160,86.8571428571429</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">340,270 120,270 120,404.5</av:PointCollection>
                                  <av:PointCollection x:Key="FalseConnector">500,270 530,270 530,371 410,371 410,401</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">279,401</av:Point>
                                      <av:Size x:Key="ShapeSize">261.714285714286,61.1428571428571</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">409.857142857143,462.142857142857 409.857142857143,492.142857142857 409.752142857143,492.142857142857 409.752142857143,521</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign, EndProcessTrigger" sap:VirtualizedContainerService.HintSize="261.714285714286,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_41">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[EndProcessTrigger]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["Maximum number of "+ Config("MaxTransactions").ToString +" transactions reached"]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID3">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">278.895,521</av:Point>
                                          <av:Size x:Key="ShapeSize">261.714285714286,61.1428571428571</av:Size>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign, TransactionItem" sap:VirtualizedContainerService.HintSize="261.714285714286,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_47">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[TransactionItem]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                        <x:Reference>__ReferenceID1</x:Reference>
                        <x:Reference>__ReferenceID2</x:Reference>
                        <x:Reference>__ReferenceID0</x:Reference>
                        <x:Reference>__ReferenceID3</x:Reference>
                      </Flowchart>
                    </Sequence>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,662.285714285714" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Log exception message and End process" sap:VirtualizedContainerService.HintSize="376.571428571429,591.428571428571" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="FatalErrorMessageText" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign SystemError" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_55">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign, FatalErrorMessageText" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_34">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[FatalErrorMessageText]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Config("LogMessage_GetTransactionDataError").ToString+TransactionNumber.ToString+". "+exception.Message+" at Source: "+exception.Source]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Error message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Fatal" Message="[FatalErrorMessageText]" />
                        <Assign DisplayName="Assign EndProcessTrigger" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_42">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[EndProcessTrigger]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Fatal error in GetTransactionData</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="End Process" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[TransactionItem]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">294.285714285714,229.714285714286</av:Point>
          <av:Size x:Key="ShapeSize">251.428571428571,100.571428571429</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">217</x:Double>
          <x:Double x:Key="StateContainerHeight">34</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="New Transaction" sap:VirtualizedContainerService.HintSize="450.857142857143,313.142857142857" sap2010:WorkflowViewState.IdRef="Transition_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">457.714285714286,330.285714285714 457.714285714286,393.182857142857 370.214285714286,393.182857142857 370.214285714286,449</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">51</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID7" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="231.428571428571,150.285714285714" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <TryCatch DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="476,717" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="376,553" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign, BusinessRuleException" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:AddLogFields DisplayName="Add Transaction log fields" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                        <ui:AddLogFields.Fields>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[TransactionNumber.ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionID">[TransactionID]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField1">[TransactionField1]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField2">[TransactionField2]</InArgument>
                        </ui:AddLogFields.Fields>
                      </ui:AddLogFields>
                      <Sequence DisplayName="Update Database (start)" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_46">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)]" DisplayName="If, Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)" sap:VirtualizedContainerService.HintSize="868.444444444444,1033.33333333333" sap2010:WorkflowViewState.IdRef="If_17">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="724,882.222222222222" sap2010:WorkflowViewState.IdRef="Sequence_53">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[Not RetryNumber &gt; 0]" DisplayName="If, Not RetryNumber &gt; 0" sap:VirtualizedContainerService.HintSize="682.222222222222,533.333333333333" sap2010:WorkflowViewState.IdRef="If_26">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Create new DatabaseRow and Grab Row-id" sap:VirtualizedContainerService.HintSize="375.555555555556,382.222222222222" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="sd:DataTable" Name="dt_RowId" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_RowId]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="333.777777777778,88.8888888888889" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" ProviderName="[Config(&quot;db_ProviderName&quot;).ToString]" Sql="[&quot;INSERT INTO &quot; + Config(&quot;db_TransactionStatusTable&quot;).ToString + &quot; ([transaction_id]) OUTPUT Inserted.id VALUES (NULL)&quot;]" ConnectionString="[Config(&quot;db_ConnectionString&quot;).ToString]">
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                    </ui:ExecuteQuery>
                                    <Assign DisplayName="Assign, DatabaseTransactionRowId" sap:VirtualizedContainerService.HintSize="333.777777777778,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_49">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[DatabaseTransactionRowId]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[dt_RowId.Rows(0).Item(0).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign, TransactionDetails(&quot;DatabaseRowId&quot;)" sap:VirtualizedContainerService.HintSize="333.777777777778,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[TransactionDetails("DatabaseRowId")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DatabaseTransactionRowId]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Assign DisplayName="Assign, TransactionDetails(&quot;DatabaseRowId&quot;)" sap:VirtualizedContainerService.HintSize="262.222222222222,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_50">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[TransactionDetails("DatabaseRowId")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[DatabaseTransactionRowId]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Else>
                              </If>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateDatabaseTransactionRow workflow" sap:VirtualizedContainerService.HintSize="682.222222222222,87.5555555555556" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Framework\UpdateDatabaseTransactionRow.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_TransactionDetails">[TransactionDetails]</InArgument>
                                  <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Values">[{TransactionID,TransactionNumber.ToString,DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"),JobDetails("JobId")}]</InArgument>
                                  <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Columns">[{"transaction_id","transaction_nr","datetime_start","transaction_job_id"}]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" sap:VirtualizedContainerService.HintSize="682.222222222222,88.8888888888889" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" ProviderName="[Config(&quot;db_ProviderName&quot;).ToString]" Sql="[&quot;UPDATE &quot; + Config(&quot;db_TransactionStatusTable&quot;).ToString + &quot; SET [attempts] = [attempts] + 1 WHERE [id] = &quot; + TransactionDetails(&quot;DatabaseRowId&quot;)]" ConnectionString="[Config(&quot;db_ConnectionString&quot;).ToString]">
                                <ui:ExecuteNonQuery.Parameters>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:ExecuteNonQuery.Parameters>
                              </ui:ExecuteNonQuery>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Process.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_TransactionDetails">[TransactionDetails]</InArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionQueueItem">[TransactionQueueItem]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Sequence DisplayName="Update Database (end)" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_55">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)]" DisplayName="If, Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)" sap:VirtualizedContainerService.HintSize="487.111111111111,238.666666666667" sap2010:WorkflowViewState.IdRef="If_28">
                          <If.Then>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateDatabaseTransactionRow workflow" sap:VirtualizedContainerService.HintSize="342.666666666667,87.5555555555556" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Framework\UpdateDatabaseTransactionRow.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_TransactionDetails">[TransactionDetails]</InArgument>
                                <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Values">[{DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff")}]</InArgument>
                                <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Columns">[{"datetime_end"}]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                        </If>
                      </Sequence>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="442,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Set transaction status to Rule Exception And Insert Exception into database" sap:VirtualizedContainerService.HintSize="797,176" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to Rule Exception" sap:VirtualizedContainerService.HintSize="756,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)]" DisplayName="If, Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)" sap:VirtualizedContainerService.HintSize="756,575" sap2010:WorkflowViewState.IdRef="If_20">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="611,427" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[exception.Message.Length &gt; 255]" DisplayName="If, exception.Message.Length &gt; 255" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_19">
                                  <If.Then>
                                    <Assign DisplayName="Assign, ExceptionMessage" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[exception.Message.Substring(0,255)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <Assign DisplayName="Assign, ExceptionMessage" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Else>
                                </If>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateDatabaseTransactionRow workflow" sap:VirtualizedContainerService.HintSize="569,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Framework\UpdateDatabaseTransactionRow.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_TransactionDetails">[TransactionDetails]</InArgument>
                                    <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Values">[{ExceptionMessage}]</InArgument>
                                    <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Columns">[{"BusinessRuleException"}]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="442,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Set transaction status to SystemError And Insert Exception into database" sap:VirtualizedContainerService.HintSize="712,872" sap2010:WorkflowViewState.IdRef="Sequence_39">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to SystemError" sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)]" DisplayName="If, Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)" sap:VirtualizedContainerService.HintSize="671,676" sap2010:WorkflowViewState.IdRef="If_22">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="526,528" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign, ExceptionMessage" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[exception.Source + " - " + exception.Message]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[ExceptionMessage.Length &gt; 255]" DisplayName="If, ExceptionMessage.Length &gt; 255" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_21">
                                  <If.Then>
                                    <Assign DisplayName="Assign, ExceptionMessage" sap:VirtualizedContainerService.HintSize="262.222222222222,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_45">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[ExceptionMessage.Substring(0,255)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                </If>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateDatabaseTransactionRow workflow" sap:VirtualizedContainerService.HintSize="483.555555555556,87.5555555555556" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Framework\UpdateDatabaseTransactionRow.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_TransactionDetails">[TransactionDetails]</InArgument>
                                    <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Values">[{ExceptionMessage}]</InArgument>
                                    <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Columns">[{"SystemException"}]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap:VirtualizedContainerService.HintSize="438,468" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,241" sap2010:WorkflowViewState.IdRef="Sequence_54">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                              <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                              <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionQueueItem">[TransactionQueueItem]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:RemoveLogFields DisplayName="Remove Transaction log fields" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="RemoveLogFields_1">
                            <ui:RemoveLogFields.Fields>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                                <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                                <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                                <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                                <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                                <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                              </scg:List>
                            </ui:RemoveLogFields.Fields>
                          </ui:RemoveLogFields>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </TryCatch.Finally>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">254.5,449</av:Point>
                  <av:Size x:Key="ShapeSize">231.428571428571,150.285714285714</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">197</x:Double>
                  <x:Double x:Key="StateContainerHeight">34</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="Error" sap:VirtualizedContainerService.HintSize="429.6,509.6" sap2010:WorkflowViewState.IdRef="Transition_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">323.928571428571,599.285714285714 323.928571428571,629.285714285714 558.785714285714,629.285714285714 558.785714285714,60.2857142857143 528.785714285714,60.2857142857143</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID8" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap:VirtualizedContainerService.HintSize="794.857142857143,2794.28571428571" sap2010:WorkflowViewState.IdRef="State_2">
                      <State.Entry>
                        <TryCatch DisplayName="Catch intialization exceptions" sap:VirtualizedContainerService.HintSize="748,2363.42857142857" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Init State" sap:VirtualizedContainerService.HintSize="709.142857142857,2125.14285714286" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Initialize SystemError" sap:VirtualizedContainerService.HintSize="666.857142857143,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[Config is Nothing]" DisplayName="If first run - read Config File, etc." sap:VirtualizedContainerService.HintSize="666.857142857143,1553.71428571429" sap2010:WorkflowViewState.IdRef="If_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="First Run" sap:VirtualizedContainerService.HintSize="521.142857142857,1400" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="ConfigFile" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Read Config File" sap:VirtualizedContainerService.HintSize="478.857142857143,996.571428571429" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign, ConfigFile" sap:VirtualizedContainerService.HintSize="436.571428571429,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_20">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ConfigFile]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory + "\Data\Config.xlsx"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:CommentOut DisplayName="Comment Out - Use Copy of ConfigFile" sap:VirtualizedContainerService.HintSize="436.571428571429,285.142857142857" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242.285714285714,207.428571428571" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence sap2010:Annotation.AnnotationText="For developing purposes, can be disabled" DisplayName="DEV - use copy of ConfigFile" sap:VirtualizedContainerService.HintSize="200,116" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="ConfigFileCopy" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign, ConfigFileCopy" sap:VirtualizedContainerService.HintSize="384,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_21">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ConfigFileCopy]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory + "\Data\ConfigFileCopy.xlsx"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[ConfigFileCopy]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,161.333333333333" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[ConfigFile]" />
                                              <Assign DisplayName="Assign, ConfigFile" sap:VirtualizedContainerService.HintSize="384,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_22">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ConfigFile]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ConfigFileCopy]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                      </ui:CommentOut>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="436.571428571429,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[ConfigFile]</InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Sequence sap2010:Annotation.AnnotationText="Save job arguments with values to Config, using the argument's name as keyname. " DisplayName="Save job arguments Config" sap:VirtualizedContainerService.HintSize="436.571428571429,150.285714285714" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[Not string.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="641,260" sap2010:WorkflowViewState.IdRef="If_9">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Assign DisplayName="Add OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                          <If.Else>
                                            <ui:Comment sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// If the argument has no value, do not overwrite config. This provides backward compatibility with &lt; 2018.3 and allows default values to come from the Config.xlsx" />
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Assign DisplayName="Assign, Config(&quot;ConfigFileLocation&quot;)" sap:VirtualizedContainerService.HintSize="436.571428571429,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_23">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[Config("ConfigFileLocation")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[ConfigFile]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign, Config(&quot;ExScreenshotsFolderPath&quot;)" sap:VirtualizedContainerService.HintSize="436.571428571429,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_53">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[Config("ExScreenshotsFolderPath")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Config("Folder_Log").ToString + "\" + Config("ExScreenshotsFolderPath").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <Sequence DisplayName="Ask for MaxTransactions if necessary" sap:VirtualizedContainerService.HintSize="478.857142857143,69.7142857142857" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="InputDialogResult" />
                                        <Variable x:TypeArguments="x:Boolean" Name="NumberProvided" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[Config(&quot;MaxTransactions&quot;).ToString.Equals(&quot;INPUTDIALOG&quot;)]" DisplayName="If, Config(&quot;MaxTransactions&quot;).ToString.Equals(&quot;INPUTDIALOG&quot;)" sap:VirtualizedContainerService.HintSize="988,1061" sap2010:WorkflowViewState.IdRef="If_13">
                                        <If.Then>
                                          <While DisplayName="Ask for a number" sap:VirtualizedContainerService.HintSize="843,913" sap2010:WorkflowViewState.IdRef="While_1" Condition="[Not NumberProvided]">
                                            <Sequence DisplayName="Keep asking until a number is provided" sap:VirtualizedContainerService.HintSize="797,755" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="755,92" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Hoeveel transacties moeten er deze run worden verwerkt?" Title="Geef het aantal te verwerken transacties op.">
                                                <ui:InputDialog.Result>
                                                  <OutArgument x:TypeArguments="x:String">[InputDialogResult]</OutArgument>
                                                </ui:InputDialog.Result>
                                              </ui:InputDialog>
                                              <If Condition="[Int32.TryParse(InputDialogResult,0)]" DisplayName="If, Int32.TryParse(InputDialogResult,0)" sap:VirtualizedContainerService.HintSize="755,531" sap2010:WorkflowViewState.IdRef="If_12">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign, NumberProvided" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[NumberProvided]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign, Config(&quot;MaxTransactions&quot;)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Object">[Config("MaxTransactions")]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Object">[InputDialogResult]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Maximum number of transactions (provided): &quot; + Config(&quot;MaxTransactions&quot;).ToString]" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Foutmelding" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Geef een getal op&quot;]" TopMost="True" />
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </While>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <Sequence DisplayName="Retrieve JobDetails" sap:VirtualizedContainerService.HintSize="478.857142857143,69.7142857142857" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="PathLocalApplicationData" />
                                        <Variable x:TypeArguments="sd:DataTable" Name="dt_NLogMessages" />
                                        <Variable x:TypeArguments="sd:DataRow" Name="NLogRow" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="507,91" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Retrieving JobDetails...&quot;]" />
                                      <Assign DisplayName="Assign, JobDetails" sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[JobDetails]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(of String, String)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessNLogFile workflow" sap:VirtualizedContainerService.HintSize="507,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\ProcessNLogFile.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="s:DateTime" x:Key="in_LogStartDate">[DateTime.Now]</InArgument>
                                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_NLogMessages">[dt_NLogMessages]</OutArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_OnlyLastLine">True</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_JobId">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign DisplayName="Assign, NLogRow" sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataRow">[NLogRow]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataRow">[dt_NLogMessages.Select("jobId = '"+dt_NLogMessages.Rows.Item(dt_NLogMessages.Rows.Count-1).Item("jobId").ToString+"'")(0)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[Convert.ToDateTime(NLogRow.Item(&quot;timeStamp&quot;).ToString) &gt; DateTime.Now.AddMinutes(-10)]" DisplayName="If, Convert.ToDateTime(NLogRow.Item(&quot;timeStamp&quot;).ToString) &gt; DateTime.Now.AddMinutes(-10)" sap:VirtualizedContainerService.HintSize="507,208" sap2010:WorkflowViewState.IdRef="If_10">
                                        <If.Then>
                                          <Assign DisplayName="Assign, JobDetails(&quot;LogStartDate&quot;)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[JobDetails("LogStartDate")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[NLogRow.Item("timeStamp").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <Throw Exception="[New System.Exception(&quot;Unable to retrieve actual NLog information.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                        </If.Else>
                                      </If>
                                      <Assign DisplayName="Assign, JobDetails(&quot;JobId&quot;)" sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[JobDetails("JobId")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[NLogRow.Item("jobId").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign, JobDetails(&quot;ProcessName&quot;)" sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[JobDetails("ProcessName")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[NLogRow.Item("processName").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign, JobDetails(&quot;ProcessVersion&quot;)" sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[JobDetails("ProcessVersion")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[NLogRow.Item("processVersion").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign, JobDetails(&quot;MachineName&quot;)" sap:VirtualizedContainerService.HintSize="506.666666666667,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_29">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[JobDetails("MachineName")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[NLogRow.Item("machineName").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign, JobDetails(&quot;RobotName&quot;)" sap:VirtualizedContainerService.HintSize="506.666666666667,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_30">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[JobDetails("RobotName")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[NLogRow.Item("robotName").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)]" DisplayName="Insert Starttime and Details into database" sap:VirtualizedContainerService.HintSize="506.666666666667,238.666666666667" sap2010:WorkflowViewState.IdRef="If_16">
                                        <If.Then>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InsertDatabaseValues workflow" sap:VirtualizedContainerService.HintSize="333.777777777778,87.5555555555556" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\InsertDatabaseValues.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DatabaseConnectionString">[Config("db_ConnectionString").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DatabaseProviderName">[Config("db_ProviderName").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DatabaseTable">[Config("db_JobLogTable").ToString]</InArgument>
                                              <InArgument x:TypeArguments="s:String[]" x:Key="in_Values">[{JobDetails("JobId"),JobDetails("ProcessName"),JobDetails("ProcessVersion"),Convert.ToDateTime(JobDetails("LogStartDate")).ToString("yyyy-MM-dd HH:mm:ss.fff"),JobDetails("MachineName"),JobDetails("RobotName")}]</InArgument>
                                              <InArgument x:TypeArguments="s:String[]" x:Key="in_Columns">[{"job_id","process_name","process_version","start_datetime","machine_name","robot_name"}]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="478.857142857143,52.5714285714286" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                                      <ui:AddLogFields.Fields>
                                        <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                      </ui:AddLogFields.Fields>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddLogFields>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="666.857142857143,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CleanUpTempFolder workflow" sap:VirtualizedContainerService.HintSize="666.857142857143,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\CleanUpTempFolder.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Folder_Temp">[Config("Folder_Temp").ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="666.857142857143,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="713.714285714286,22.8571428571429" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="261.714285714286,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">274.5,10</av:Point>
                          <av:Size x:Key="ShapeSize">254.285714285714,91.4285714285714</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">220</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="System Error" sap:VirtualizedContainerService.HintSize="481.714285714286,1104.57142857143" sap2010:WorkflowViewState.IdRef="Transition_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">401.642857142857,101.428571428571 401.642857142857,131.428571428571 137.8,131.428571428571 137.8,188.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <State x:Name="__ReferenceID6" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap:VirtualizedContainerService.HintSize="144,92.5714285714286" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                              <State.Entry>
                                <Sequence DisplayName="End of process activities" sap:VirtualizedContainerService.HintSize="870.285714285714,3575.42857142857" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="dt_NLogMessages" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch sap:VirtualizedContainerService.HintSize="828,324.571428571429" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                    <TryCatch.Try>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.571428571429,22.8571428571429" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376.571428571429,314.285714285714" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CleanUpTempFolder workflow" sap:VirtualizedContainerService.HintSize="828,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework\CleanUpTempFolder.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Folder_Temp">[Config("Folder_Temp").ToString]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="828,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;End process and try send logmessages...&quot;]" />
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="828,1959.42857142857" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Sequence DisplayName="ProcessWorkflowLogs" sap:VirtualizedContainerService.HintSize="789.142857142857,1721.14285714286" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessNLogFile workflow" sap:VirtualizedContainerService.HintSize="746.857142857143,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Framework\ProcessNLogFile.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="s:DateTime" x:Key="in_LogStartDate">[Convert.ToDateTime(JobDetails("LogStartDate"))]</InArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_NLogMessages">[dt_NLogMessages]</OutArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_OnlyLastLine">False</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_JobId">[JobDetails("JobId")]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:FilterDataTable DataTable="[dt_NLogMessages]" DisplayName="Filter Data Table for current JobId" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="746.857142857143,58.2857142857143" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_NLogMessages]" SelectColumnsMode="Keep">
                                          <ui:FilterDataTable.Filters>
                                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                <ui:FilterOperationArgument.Column>
                                                  <InArgument x:TypeArguments="x:String">["jobId"]</InArgument>
                                                </ui:FilterOperationArgument.Column>
                                                <ui:FilterOperationArgument.Operand>
                                                  <InArgument x:TypeArguments="x:String">[JobDetails("JobId")]</InArgument>
                                                </ui:FilterOperationArgument.Operand>
                                              </ui:FilterOperationArgument>
                                            </scg:List>
                                          </ui:FilterDataTable.Filters>
                                          <ui:FilterDataTable.SelectColumns>
                                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                                              <x:Null />
                                            </scg:List>
                                          </ui:FilterDataTable.SelectColumns>
                                        </ui:FilterDataTable>
                                        <If Condition="[Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)]" DisplayName="If, Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)" sap:VirtualizedContainerService.HintSize="746.857142857143,1405.14285714286" sap2010:WorkflowViewState.IdRef="If_24">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Add LogRows to Database (if columns exist)" sap:VirtualizedContainerService.HintSize="601.142857142857,1251.42857142857" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="sd:DataTable" Name="dt_DbColumnNames" />
                                                <Variable x:TypeArguments="scg:List(x:String)" Name="RemoveNLogColumns" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_DbColumnNames]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="558.857142857143,86.8571428571429" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" ProviderName="[Config(&quot;db_ProviderName&quot;).ToString]" Sql="[&quot;SELECT TOP (0) * FROM &quot; +Config(&quot;db_WorkflowLogTable&quot;).ToString]" ConnectionString="[Config(&quot;db_ConnectionString&quot;).ToString]">
                                                <ui:ExecuteQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteQuery.Parameters>
                                              </ui:ExecuteQuery>
                                              <Assign DisplayName="Assign, RemoveNLogColumns" sap:VirtualizedContainerService.HintSize="558.857142857143,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[RemoveNLogColumns]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(of String)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="558.857142857143,540" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dt_NLogMessages.Columns]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="sd:DataColumn">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="NLogColumn" />
                                                    </ActivityAction.Argument>
                                                    <If Condition="[dt_DbColumnNames.Columns.Contains(NLogColumn.ColumnName)]" DisplayName="If, dt_DbColumnNames.Columns.Contains(NLogColumn.ColumnName)" sap:VirtualizedContainerService.HintSize="522.285714285714,402.285714285714" sap2010:WorkflowViewState.IdRef="If_29">
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="376.571428571429,248.571428571429" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Warn" Message="[&quot;WorkflowLog Column '&quot; + NLogColumn.ColumnName + &quot;' does not exist in database!&quot;]" />
                                                          <AddToCollection x:TypeArguments="x:String" Collection="[RemoveNLogColumns]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334.285714285714,21.7142857142857" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[NLogColumn.ColumnName]" />
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ForEach>
                                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="558.857142857143,197.714285714286" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[RemoveNLogColumns]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="x:String">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:String" Name="NLogColumnName" />
                                                    </ActivityAction.Argument>
                                                    <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[NLogColumnName]" DataTable="[dt_NLogMessages]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="200,21.7142857142857" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                              </ui:ForEach>
                                              <ui:InsertDataTable AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" DataTable="[dt_NLogMessages]" DisplayName="Insert" sap:VirtualizedContainerService.HintSize="558.857142857143,114.285714285714" sap2010:WorkflowViewState.IdRef="InsertDataTable_1" ProviderName="[Config(&quot;db_ProviderName&quot;).ToString]" TableName="[Config(&quot;db_WorkflowLogTable&quot;).ToString]" ConnectionString="[Config(&quot;db_ConnectionString&quot;).ToString]" />
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="793.714285714286,22.8571428571429" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Error" Message="[&quot;Failed to process Workflow Logs. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <TryCatch DisplayName="Try Catch Send Logmessage" sap:VirtualizedContainerService.HintSize="828,324.571428571429" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                    <TryCatch.Try>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendLogEmail workflow" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework\SendLogEmail.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_JobId">[JobDetails("JobId")]</InArgument>
                                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_NLogMessages">[dt_NLogMessages]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EndProcessTrigger">[JobDetails("EndProcessTrigger")]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.571428571429,22.8571428571429" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="481.142857142857,812" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Warn" Message="[&quot;Failed to send (detailed) logmessage. &quot; + exception.ToString]" />
                                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434.285714285714,194.285714285714" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                              <TryCatch.Try>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376.571428571429,243.428571428571" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Beste medewerker,&quot; + Environment.NewLine + Environment.NewLine +&#xA;&quot;Op &quot; + dateTime.Now.ToString(&quot;dd-MM-yyyy, HH:mm&quot;) + &quot; is het RPA-proces afgerond.&quot; + Environment.NewLine + &#xA;&quot;Er kon geen inhoudelijk logbericht worden gegenereerd. Open de logberichten op de RPA-omgeving voor meer details.&quot; + Environment.NewLine + Environment.NewLine +&#xA;&quot;Met vriendelijke groet,&quot; + Environment.NewLine + &quot;Virtual Assistant RPA&quot;]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334.285714285714,152" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="False" IsDraft="False" Subject="Logmessage from Robot" To="[Config(&quot;LogMessageAddress&quot;).ToString]">
                                                    <ui:SendOutlookMail.Files>
                                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                                    </ui:SendOutlookMail.Files>
                                                  </ui:SendOutlookMail>
                                                </Sequence>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22.8571428571429" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Warn" Message="[&quot;Failed to send (general) emailmessage. &quot; + exception.ToString]" />
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <If Condition="[Boolean.Parse(Config(&quot;db_UseConnection&quot;).ToString)]" DisplayName="Update Job Endtime in database" sap:VirtualizedContainerService.HintSize="828,240" sap2010:WorkflowViewState.IdRef="If_23">
                                    <If.Then>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateDatabaseValues workflow" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\UpdateDatabaseValues.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_DatabaseConnectionString">[Config("db_ConnectionString").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_DatabaseProviderName">[Config("db_ProviderName").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_DatabaseTable">[Config("db_JobLogTable").ToString]</InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="in_WHERE_Columns">[{"job_id"}]</InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="in_WHERE_Values">[{JobDetails("JobId")}]</InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Values">[{DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff"),JobDetails("EndProcessTrigger")}]</InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="in_SET_Columns">[{"end_datetime","end_trigger"}]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </If.Then>
                                  </If>
                                  <If Condition="[SystemError Is Nothing]" DisplayName="Rethrow SystemError if any" sap:VirtualizedContainerService.HintSize="828,213.714285714286" sap2010:WorkflowViewState.IdRef="If_30">
                                    <If.Else>
                                      <Throw Exception="[SystemError]" sap:VirtualizedContainerService.HintSize="200,21.7142857142857" sap2010:WorkflowViewState.IdRef="Throw_2" />
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">73,188.5</av:Point>
                                  <av:Size x:Key="ShapeSize">144,92.5714285714286</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">110</x:Double>
                                  <x:Double x:Key="StateContainerHeight">26</x:Double>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <Sequence sap:VirtualizedContainerService.HintSize="376.571428571429,389.142857142857" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="LogMessageText" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign, LogMessageText" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_32">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[LogMessageText]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">["System error at initialization: " + SystemError.Message + " at Source: " + SystemError.Source]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[LogMessageText]" />
                              <Assign DisplayName="Assign, JobDetails(&quot;EndProcessTrigger&quot;)" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_33">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[JobDetails("EndProcessTrigger")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Fatal error in Initialization</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </Transition.Action>
                          <Transition.Condition>[SystemError isNot Nothing]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="430,537" sap2010:WorkflowViewState.IdRef="Transition_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Int32 x:Key="SrcConnectionPointIndex">55</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                              <av:PointCollection x:Key="ConnectorLocation">452.5,101.428571428571 452.5,131.428571428571 420,131.428571428571 420,229.714285714286</av:PointCollection>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID5</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:Comment sap:VirtualizedContainerService.HintSize="334.285714285714,75.4285714285714" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                          </Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="Rule Exception" sap:VirtualizedContainerService.HintSize="429.6,509.6" sap2010:WorkflowViewState.IdRef="Transition_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">381.785714285714,599.285714285714 381.785714285714,619.885714285714 575.714285714286,619.885714285714 575.714285714286,259.885714285714 545.714285714286,259.885714285714</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID5</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[BusinessRuleException IsNot Nothing]</Transition.Condition>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap:VirtualizedContainerService.HintSize="450,532" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">428.071428571429,599.285714285714 428.071428571429,629.285714285714 575.714285714286,629.285714285714 575.714285714286,300.114285714286 545.714285714286,300.114285714286</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID5</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[SystemError Is Nothing And BusinessRuleException is Nothing]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334.285714285714,95.4285714285714" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="TransactionItem IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
          </Transition.Condition>
        </Transition>
        <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap:VirtualizedContainerService.HintSize="712,1284" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">407.428571428571,330.285714285714 407.428571428571,360.285714285714 159.4,360.285714285714 159.4,281.071428571429</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">47</x:Int32>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID6</x:Reference>
          </Transition.To>
          <Transition.Action>
            <Sequence DisplayName="Write Logmessage" sap:VirtualizedContainerService.HintSize="611.428571428571,541.714285714286" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="LogMessageText" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[String.IsNullOrEmpty(EndProcessTrigger)]" DisplayName="If, String.IsNullOrEmpty(EndProcessTrigger)" sap:VirtualizedContainerService.HintSize="569.142857142857,214.857142857143" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Then>
                  <Assign DisplayName="Assign, LogMessageText" sap:VirtualizedContainerService.HintSize="261.714285714286,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_35">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LogMessageText]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Process finished due to no more transaction data</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Assign, LogMessageText" sap:VirtualizedContainerService.HintSize="261.714285714286,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LogMessageText]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[EndProcessTrigger]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="568.888888888889,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[LogMessageText]" />
              <Assign DisplayName="Assign, JobDetails(&quot;EndProcessTrigger&quot;)" sap:VirtualizedContainerService.HintSize="568.888888888889,60.4444444444444" sap2010:WorkflowViewState.IdRef="Assign_37">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[JobDetails("EndProcessTrigger")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[LogMessageText]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="TransactionItem Is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="System Error" sap:VirtualizedContainerService.HintSize="451.428571428571,584.571428571429" sap2010:WorkflowViewState.IdRef="Transition_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:PointCollection x:Key="ConnectorLocation">294.285714285714,285.028571428571 264.285714285714,285.028571428571 264.285714285714,239.414285714286 217,239.414285714286</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">41</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID6</x:Reference>
          </Transition.To>
          <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:String" Name="EndProcessTrigger" />
      </State.Variables>
    </State>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:String" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="JobDetails" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="TransactionDetails" />
      <Variable x:TypeArguments="x:String" Name="DatabaseTransactionRowId" />
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionQueueItem" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>