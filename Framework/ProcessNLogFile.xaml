<Activity mc:Ignorable="sap sap2010" x:Class="ProcessNLogFile" this:ProcessNLogFile.in_LogStartDate="[DateTime.Now]" this:ProcessNLogFile.in_OnlyLastLine="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_LogStartDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="out_dt_NLogMessages" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_OnlyLastLine" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_JobId" Type="InArgument(x:String)" />
  </x:Members>
  <this:ProcessNLogFile.in_JobId>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:ProcessNLogFile.in_JobId>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>711,2726</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessNLogFile_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProcessNLogFile" sap:VirtualizedContainerService.HintSize="691,2306" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PathLocalApplicationData" />
      <Variable x:TypeArguments="str:MatchCollection" Name="LogRowsLines" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="649,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[out_dt_NLogMessages]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[New System.Data.DataTable]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetEnvironmentFolder DisplayName="Get Environment Folder" FolderPath="[PathLocalApplicationData]" sap:VirtualizedContainerService.HintSize="649,61" sap2010:WorkflowViewState.IdRef="GetEnvironmentFolder_1" SpecialFolder="LocalApplicationData" />
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="649,2013" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(0,(Convert.ToInt32(DateDiff(DateInterval.Day,in_LogStartDate,DateTime.Now)))+1).ToArray()]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="day" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="613,1879" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="TextLogFile" />
              <Variable x:TypeArguments="x:String" Name="LogFilePath" />
              <Variable x:TypeArguments="x:String" Name="LogFileCopyPath" />
              <Variable x:TypeArguments="s:DateTime" Name="LogFileDate" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="TestLogRowsLines" />
              <Variable x:TypeArguments="x:Int32" Name="MatchIndex" />
              <Variable x:TypeArguments="x:String" Name="LogRowLine" />
              <Variable x:TypeArguments="sd:DataTable" Name="dt_LogRow" />
              <Variable x:TypeArguments="sd:DataTable" Name="dt_LogRowsLines" />
              <Variable x:TypeArguments="x:Double" Name="LogFileSize" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="571,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[LogFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[PathLocalApplicationData + "\UiPath\Logs\" + in_LogStartDate.AddDays(day).ToString("yyyy-MM-dd") + "_Execution.log"]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="571,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="s:DateTime">[LogFileDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:DateTime">[in_LogStartDate.Date.AddDays(day)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[LogFileDate.Date.Equals(DateTime.Now.Date)]" DisplayName="If Todays (Current) LogFile" sap:VirtualizedContainerService.HintSize="571,597" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="426,449" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LogFileCopyPath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Path.ChangeExtension(LogFilePath,"") + "copy" + DateTime.Now.ToString("yyyyMMdd.HHmmss") + ".log"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:CopyFile ContinueOnError="{x:Null}" Destination="[LogFileCopyPath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="[LogFilePath]" />
                  <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LogFilePath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[LogFileCopyPath]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="571,60" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[LogFileSize]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[(New FileInfo(LogFilePath).SizeInKB)/1024]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[LogFileSize &gt; 100]" sap:VirtualizedContainerService.HintSize="571,239" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;Warning: LogFile is big (&quot;+Math.Truncate(LogFileSize).ToString+&quot;MB). This might cause delays or problems, consider turning off TRACE-logging or create a new logfile&quot;]" />
              </If.Then>
            </If>
            <ui:ReadTextFile Content="[TextLogFile]" DisplayName="Read Text File" FileName="[LogFilePath]" sap:VirtualizedContainerService.HintSize="571,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <If Condition="[LogFilePath.Equals(LogFileCopyPath)]" DisplayName="Remove Copy of Logfile" sap:VirtualizedContainerService.HintSize="571,208" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[LogFilePath]" />
              </If.Then>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="571,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="str:MatchCollection">[LogRowsLines]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:MatchCollection">[System.Text.RegularExpressions.Regex.Matches(TextLogFile,"{.*}[\r\n]")]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[in_OnlyLastLine]" sap:VirtualizedContainerService.HintSize="571,51" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,314" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LogRowLine]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[LogRowsLines(LogRowsLines.Count-1).Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:DeserializeJson x:TypeArguments="sd:DataTable" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[dt_LogRow]" JsonString="[LogRowLine.Replace(&quot;{&quot;,&quot;[{&quot;).Replace(&quot;}&quot;,&quot;}]&quot;)]" />
                  <ui:MergeDataTable Destination="[out_dt_NLogMessages]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add" Source="[dt_LogRow]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="557,596" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[LogRowsLines]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="str:Match">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="str:Match" Name="match" />
                      </ActivityAction.Argument>
                      <If Condition="[match.Value.Contains(in_JobId)]" sap:VirtualizedContainerService.HintSize="521,462" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,314" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LogRowLine]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[match.Value]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:DeserializeJson x:TypeArguments="sd:DataTable" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[dt_LogRow]" JsonString="[LogRowLine.Replace(&quot;{&quot;,&quot;[{&quot;).Replace(&quot;}&quot;,&quot;}]&quot;)]" />
                            <ui:MergeDataTable Destination="[out_dt_NLogMessages]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_4" MissingSchemaAction="Add" Source="[dt_LogRow]" />
                          </Sequence>
                        </If.Then>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>